/* программируем поведение кнопки на все возможные состояния
*/

.btn{
&,
&:link,
&:visited {
	text-transform: uppercase;
	text-decoration: none;
	padding: 1.5rem 4rem;
	display: inline-block;
	/* всегда когд мы хотим добавить пэддинг или размеры элементу
	*/
	border-radius: 10rem;
	transition: all .2s; 
	position: relative;
	font-size: $default-font;
	
	//изменения для элементф  html BUTTON
	border: none;
	cursor: pointer;	
}

&:hover {
	transform: translateY(-0.3rem);
	box-shadow: 0 1rem 2rem rgba($color-black, 0.2);

	&::after {
	/* scale увеличивает размер элемента
	*/
		transform: scaleX(1.4) scaleY(1.6);
	/*пропадает кнопка
	*/
		opacity: 0;
		}
}


&:active,
//при фокусировании элементф html BUTTON
&:focus {
	outline: none;
	transform: translateY(-.1rem);
	box-shadow: 0 .5rem 1rem rgba($color-black, 0.2);
}

&-white {
	background-color: $color-white;
	color: $color-grey-dark;
	
	&:after {
	background-color: $color-white;
	}
}

&-green {
	background-color: $color-primary;
	color: $color-white;
	
	&:after {
	background-color: $color-primary;
	}
}

/* создаем псевдоэлемент кот выглядит прямо как наш выбранный 
элемент, н он помещается позади выбранного элемента. мы
можем зпрограммировать этот псевдоэлемент как угодно
*/
&::after {
	/*для того чтобы элемент появился нужен content
	*/
	content: "";
	/*тк кнопка которую мы берем тоже инлайнблок, а мы 
	хотим, чтобы псевдоэлемент выглядил в точности также
	*/
	display: inline-block;
	/* псевдоэлемент являетс наслдеником кнопки, поэтому
	ее размеры он наследует, задаем 100%
	*/

	height: 100%;
	width: 100%;
	border-radius: 10rem;
	/*для того чтобы поместить псевдоэлемент ЗА кнопку
	*/
	position: absolute;
	top: 0;
	left: 0;
	/* для того чтобы сначала даже при наведении или нажатии
	 была кнопка потом псевдоэлемент
	*/
	z-index: -1;
	transition: all .4s
	}
	
	&-animated {
		animation: moveInBottom .5s ease-out .75s;
		animation-fill-mode: backwards;
	}
}

.btn-text {
	&:link,
	&:visited {
		
		color: $color-primary;
		font-weight: 700;
		text-decoration: none;		
		display: inline-block;
		font-size: $default-font;
		border-radius: 2px;
		border-bottom: 1px solid $color-primary;
		padding: 3px;
		transition: all .2s;

	}

	&:hover {

		background-color: $color-primary;
		color: $color-white;
		box-shadow: 0 1rem 2rem rgba($color-black, 0.2);

	}

	&:active {
		box-shadow: 0 .5rem 1rem rgba($color-black, 0.2);
		transform: translateY(.3rem);
	}
}






















